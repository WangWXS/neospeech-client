//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.17 at 09:24:31 PM CET 
//


package net.deepnet.joshua.dto.request;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import java.math.BigInteger;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.deepnet.joshua.dto package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
@Component
public class ObjectFactory {

    @Value("${email}")
    private String email;
    @Value("${account.id}")
    private String accountId;
    @Value("${login.key}")
    private String loginKey;
    @Value("${login.password}")
    private String loginPassword;
    @Value("${output.format}")
    private String outputFormat;
    @Value("${sample.rate}")
    private int sampleRate;

    private final static QName _ConvertSimple_QNAME = new QName("http://myprojects.net/xsd/TestScheme", "convertSimple");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.deepnet.joshua.dto
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ConvertSimple }
     * 
     */
    public ConvertSimple createConvertSimple() {
        final ConvertSimple convertSimple = new ConvertSimple();
        convertSimple.setAccountId(accountId);
        convertSimple.setEmail(email);
        convertSimple.setLoginKey(loginKey);
        convertSimple.setLoginPassword(loginPassword);
        convertSimple.setOutputFormat(outputFormat);
        convertSimple.setSampleRate(BigInteger.valueOf(sampleRate));
        return convertSimple;
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConvertSimple }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://myprojects.net/xsd/TestScheme", name = "convertSimple")
    public JAXBElement<ConvertSimple> createConvertSimple(ConvertSimple value) {
        return new JAXBElement<ConvertSimple>(_ConvertSimple_QNAME, ConvertSimple.class, null, value);
    }

}
